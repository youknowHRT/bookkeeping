{"version":3,"sources":["store/datahelper.js","components/numberPad.js","components/icon.js","store/iconList.js","store/labelDatahelper.js","components/tagList.js","components/tabs.js","components/note.js","components/nav.js","pages/countMoney.js","pages/general.js","store/dateFormatter.js","components/charts/barChart.js","components/charts/doughnut.js","pages/charts.js","pages/totalLabel.js","pages/404.js","pages/edit.js","App.js","reportWebVitals.js","index.js"],"names":["Datahelper","dataKey","this","strData","localStorage","getItem","arrData","JSON","parse","stringify","setItem","receivedObj","readData","obj","newId","length","id","createAt","Date","push","saveData","arrDate","index","findIndex","ele","splice","getTime","time","year","getFullYear","month","getMonth","day","getDate","weekDay","getDay","hours","getHours","minute","getMinutes","NumberPad","props","db","useState","amount","setAmount","useEffect","buttons","document","querySelectorAll","i","onclick","e","buttonContent","target","textContent","substring","console","log","newBookList","value","addData","handleDefault","concat","map","item","button","className","IconWrap","styled","div","Icon","name","defaultIncomeTags","foodTags","choose","shoppingTags","transportTags","houseTags","entertainmentTags","medicalTags","LabelDatahelper","category","TagList","expenseTagList","flat","filter","history","useHistory","iconChoosed","tagList","iconSelect","setIconSelect","labelUsed","li","onClick","indexOf","handleTag","chooseTag","ifPushAddTag","TabsWrap","Tabs","navBarType","setNavBarType","incomeTagList","navbarHandle","defaultTag","moneyType","tag","tagName","Inputwrap","Input","placeholder","type","onChange","handleInput","Nav","navIcons","navList","locationName","useLocation","pathname","to","CountMoneyWrap","CountMoney","note","bookList","setBookList","Object","assign","inputMsg","General","localList","reverse","myAccountList","totalMoneyOfTag","reduce","sum","parseInt","date","toLocaleDateString","dateFormatter","toISOString","dayjs","format","width","documentElement","clientWidth","height","BarChart","container","getElementById","style","myChart","echarts","init","option","tooltip","legend","data","selected","支出","收入","itemWidth","itemHeight","grid","x","y","x2","y2","borderWidth","xAxis","dayOfMonthX","splitLine","show","lineStyle","color","axisLine","axisLabel","interval","textStyle","fontSize","yAxis","axisTick","series","expenseArr","itemStyle","normal","barBorderRadius","label","position","barWidth","incomeArr","setOption","on","controller","Doughnut","trigger","formatter","radius","val","split","join","emphasis","shadowBlur","shadowOffsetX","shadowColor","textColor","pureTagList","tagCost","Charts","monthLastDay","daysInMonth","filterLocalList","createYear","createMonth","expenseList","incomeList","eachTagCost","accountList","totalValueByType","totalAccountByType","parseFloat","allSameTypeTags","Set","arr","percentValue","toFixed","toString","setController","eachDayCost","j","eachDayIncome","arrAccount","TotalLabel","ldb","filterChoosed","tagAllChoose","setTagAllChoose","categoryList","categoryItem","list","categoryUl","newFilterChoosed","handleClick","go","noMatch","Edit","Wrapper","Main","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1e872bad.chunk.js","sourcesContent":["export default class Datahelper {\r\n  constructor(dataKey) {\r\n    this.dataKey = dataKey\r\n    // this.primaryKey = primaryKey\r\n  }\r\n\r\n  readData() {\r\n    //根据键值读取本地数据\r\n    let strData = localStorage.getItem(this.dataKey)\r\n    //把json数据转为js对象，并且赋值给arrData\r\n    let arrData = []\r\n    if (strData != null) arrData = JSON.parse(strData)\r\n    return arrData\r\n  }\r\n\r\n  saveData(arrData) {\r\n    //接收一个数组并专为json\r\n    let strData = JSON.stringify(arrData)\r\n    //存储到本地\r\n    localStorage.setItem(this.dataKey, strData)\r\n  }\r\n\r\n  addData(receivedObj) {\r\n    //读取本地数据转为数组\r\n    let arrData = this.readData()\r\n    //接收数据内容，\r\n    // let obj={content:conStr}\r\n    let obj = receivedObj\r\n    //将内容封装到对象，并生成id\r\n    let newId =arrData.length > 0 ? arrData[arrData.length - 1].id + 1 : 1\r\n    obj.id = newId\r\n    obj.createAt=new Date()\r\n    //将对象加入数组\r\n    arrData.push(obj)\r\n    //将数组转为字符串，保存到本地\r\n    this.saveData(arrData)\r\n    return newId\r\n  }\r\n\r\n  removeData(id) {\r\n    //读取本地数据\r\n    let arrDate = this.readData()\r\n    //根据ID寻找要删除的内容\r\n    let index = arrDate.findIndex((ele) => {\r\n      return ele.id === id\r\n    })\r\n    //调用splice方法删除找出的对象\r\n    if (index > -1) {\r\n      arrDate.splice(index, 1)\r\n      this.saveData(arrDate)\r\n      return true\r\n    }\r\n    //将数组转为字符串，保存到本地\r\n    return false\r\n    //返回boolean值表示删除结果\r\n  }\r\n  dataConversion(getTime){\r\n  let week=['星期日','星期一','星期二','星期三','星期四','星期五','星期六']\r\n  let time=new Date(getTime)\r\n  let year =time.getFullYear()\r\n  let month =time.getMonth()+1\r\n  let day =time.getDate()\r\n  let dayNumber=time.getDay()//获取星期数字\r\n  let weekDay=week[dayNumber]  //获取星期$\r\n  let hours =time.getHours()\r\n  let minute =time.getMinutes()\r\n  return {year,month,day,weekDay,hours,minute}\r\n  }\r\n}\r\n","import {useEffect, useState} from 'react'\r\nimport Datahelper from '../store/datahelper'\r\nimport './numberPad.scss'\r\n\r\nexport default function NumberPad(props){\r\n  let db =new Datahelper('accountBook')\r\n  let [amount,setAmount]=useState(\"\")\r\n  useEffect(()=>{\r\n    const buttons=document.querySelectorAll(\"div.buttonWrap>button\")//获取的是node对象，不是数组\r\n    for(let i=0;i<buttons.length;i++){//必须遍历button挨个添加点击事件，不然点到div上会打印全部的键盘字符\r\n      buttons[i].onclick= function (e){\r\n        let buttonContent =e.target.textContent\r\n        if(buttonContent===\"删除\"){\r\n          if (amount.length===0)return\r\n          setAmount(amount=amount.substring(0,amount.length-1))\r\n        }else if(buttonContent===\"清零\"){\r\n          setAmount(\"\")\r\n        }else if(buttonContent==='确认'){\r\n          if(amount===\"0\"||amount===\"\")return console.log('给我一个数字');\r\n          console.log('记录一笔账');\r\n          const newBookList={...props.value,amount}\r\n          console.log(\"🚀 ~ file: numberPad.js ~ line 39 ~ editNumber ~ newBookList\", newBookList)\r\n          db.addData(newBookList)\r\n          props.handleDefault()\r\n          setAmount(\"\")\r\n        }else{\r\n          if(amount.length<16)return setAmount(amount.concat(buttonContent))\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n  const buttonArr=['1','2','3','删除','4','5','6','确认','7','8','9','清零','0',\".\"]\r\n  const buttons=[]\r\n  buttonArr.map((item,index)=>{\r\n    let button= <button key={index} className={item==='确认'?'OK':''}>{item}</button>\r\n    return buttons.push(button)\r\n  })\r\n  return <div className=\"numberPad\">\r\n    <div className=\"show\">\r\n      <div className=\"show-string\">金额</div>\r\n      <div className=\"show-number\">{amount}</div>\r\n    </div>\r\n    <div className=\"buttonWrap\" >\r\n      {buttons}\r\n      {/* <button>1</button>\r\n      <button>2</button>\r\n      <button>3</button>\r\n      <button>删除</button>\r\n      <button>4</button>\r\n      <button>5</button>\r\n      <button>6</button>\r\n      <button className=\"OK\">确认</button>\r\n      <button>7</button>\r\n      <button>8</button>\r\n      <button>9</button>\r\n      <button>清零</button>\r\n      <button>0</button>\r\n      <button>.</button> */}\r\n    </div>\r\n  </div>\r\n}","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport '../assets/icon/iconfont.css'\r\nconst IconWrap=styled.div`\r\n\r\n  .iconfont{\r\n    width: 1em;\r\n    height: 1em;\r\n    vertical-align: -0.15em;\r\n    overflow: hidden;\r\n    fill: currentColor;\r\n  }\r\n`\r\nexport default function Icon(props){\r\n  let name=' i-'+props.name\r\n  return <IconWrap className=\"iconWrap\">\r\n    {/* <sgv className=\"icon\"><use xlinkHref={\"#i-\"+props.name}/></sgv> */}\r\n    <i className={\"iconfont\"+name}></i>\r\n  </IconWrap>\r\n    \r\n\r\n}","const defaultExpenseTags = [\r\n  { name: 'food', value: '餐饮' },\r\n  { name: 'shopping', value: '购物' },\r\n  { name: 'house', value: '居住' },\r\n  { name: 'transport', value: '交通' },\r\n  { name: 'entertainment', value: '娱乐' },\r\n  { name: 'medical', value: '医疗' },\r\n]\r\n\r\nconst defaultIncomeTags = [\r\n  { name: 'salary', value: '工资' },\r\n  { name: 'part-time-job', value: '兼职' },\r\n  { name: 'bonus', value: '奖金' },\r\n  { name: 'reimbursement', value: '报销' },\r\n  { name: 'cash-gift', value: '礼金' },\r\n]\r\n\r\nconst foodTags = [\r\n  { name: 'food', value: '餐饮', choose: true },\r\n  { name: 'rice', value: '午餐/晚餐', choose: false },\r\n  { name: 'takeOut', value: '外卖', choose: false },\r\n  { name: 'vegetables', value: '买菜', choose: false },\r\n  { name: 'snacks', value: '零食', choose: false },\r\n  { name: 'barbecue', value: '小吃', choose: false },\r\n  { name: 'drink', value: '饮料', choose: false },\r\n]\r\n\r\nconst shoppingTags = [\r\n  { name: 'shopping', value: '购物', choose: true },\r\n  { name: 'necessary', value: '日用品', choose: false },\r\n  { name: 'cloth', value: '衣服', choose: false },\r\n  { name: 'digital', value: '数码', choose: false },\r\n  { name: 'electricalGoods', value: '电器', choose: false },\r\n  { name: 'furniture', value: '家具', choose: false },\r\n  { name: 'cosmetic', value: '化妆品', choose: false },\r\n]\r\n\r\nconst transportTags = [\r\n  { name: 'transport', value: '交通', choose: true },\r\n  { name: 'ship', value: '轮船', choose: false },\r\n  { name: 'subway', value: '地铁', choose: false },\r\n  { name: 'train', value: '火车', choose: false },\r\n  { name: 'plane', value: '飞机', choose: false },\r\n  { name: 'taxi', value: '出租车', choose: false },\r\n]\r\n\r\nconst houseTags = [\r\n  { name: 'house', value: '居住', choose: false },\r\n  { name: 'phone', value: '话费网费', choose: false },\r\n  { name: 'water', value: '水费', choose: false },\r\n  { name: 'electric', value: '电费', choose: false },\r\n  { name: 'fix', value: '维修', choose: false },\r\n]\r\n\r\nconst entertainmentTags = [\r\n  { name: 'entertainment', value: '娱乐', choose: false },\r\n  { name: 'game', value: '游戏', choose: false },\r\n  { name: 'movie', value: '电影', choose: false },\r\n  { name: 'sports', value: '运动', choose: false },\r\n  { name: 'travel', value: '旅游', choose: false },\r\n]\r\n\r\nconst medicalTags = [\r\n  { name: 'medical', value: '医疗', choose: false },\r\n  { name: 'drug', value: '药品费', choose: false },\r\n  { name: 'surgery', value: '手术费', choose: false },\r\n]\r\n\r\nexport {\r\n  defaultExpenseTags,\r\n  defaultIncomeTags,\r\n  foodTags,\r\n  shoppingTags,\r\n  transportTags,\r\n  houseTags,\r\n  entertainmentTags,\r\n  medicalTags,\r\n}\r\n","import {foodTags,shoppingTags,transportTags,houseTags,entertainmentTags,medicalTags} from './iconList'\r\nexport default class LabelDatahelper {\r\n  constructor(dataKey) {\r\n    this.dataKey = dataKey\r\n    // this.primaryKey = primaryKey\r\n  }\r\n  \r\n  readData() {\r\n    const category =[foodTags,shoppingTags,transportTags,houseTags,entertainmentTags,medicalTags]\r\n    //根据键值读取本地数据\r\n    let strData = localStorage.getItem(this.dataKey)\r\n    //把json数据转为js对象，并且赋值给arrData\r\n    let arrData = []\r\n    if (strData != null) {arrData = JSON.parse(strData)}\r\n    else{arrData=category}\r\n    return arrData\r\n  }\r\n\r\n  saveData(arrData) {\r\n    //接收一个数组并专为json\r\n    let strData = JSON.stringify(arrData)\r\n    //存储到本地\r\n    localStorage.setItem(this.dataKey, strData)\r\n  }\r\n\r\n  addData(receivedObj) {\r\n    //读取本地数据转为数组\r\n    let arrData = this.readData()\r\n    //接收数据内容，\r\n    // let obj={content:conStr}\r\n    let obj = receivedObj\r\n    //将内容封装到对象，并生成id\r\n    let newId =arrData.length > 0 ? arrData[arrData.length - 1].id + 1 : 1\r\n    obj.id = newId\r\n    //将对象加入数组\r\n    arrData.push(obj)\r\n    //将数组转为字符串，保存到本地\r\n    this.saveData(arrData)\r\n    return newId\r\n  }\r\n\r\n  removeData(id) {\r\n    //读取本地数据\r\n    let arrDate = this.readData()\r\n    //根据ID寻找要删除的内容\r\n    let index = arrDate.findIndex((ele) => {\r\n      return ele.id === id\r\n    })\r\n    //调用splice方法删除找出的对象\r\n    if (index > -1) {\r\n      arrDate.splice(index, 1)\r\n      this.saveData(arrDate)\r\n      return true\r\n    }\r\n    //将数组转为字符串，保存到本地\r\n    return false\r\n    //返回boolean值表示删除结果\r\n  }\r\n}\r\n","import React,{useState,useEffect} from 'react'\r\nimport Icon from './icon'\r\nimport { useHistory } from 'react-router-dom'\r\nimport './tagList.scss'\r\nimport LabelDatahelper from '../store/labelDatahelper'\r\n\r\nexport default function TagList(props) {\r\n  const ldb=new LabelDatahelper('labelRecord')\r\n  const expenseTagList=ldb.readData().flat().filter((item)=>item.choose===true)\r\n  const history = useHistory()\r\n  let iconChoosed = props.tagList?props.tagList:expenseTagList\r\n  const [iconSelect,setIconSelect]=useState(0)//选中tag的index值\r\n  const labelUsed = []\r\n  function chooseTag(item) {\r\n    let index=iconChoosed.indexOf(item)\r\n    setIconSelect(index)\r\n    props.handleTag(item)\r\n  }\r\n\r\n  useEffect(()=>{//tabs切换时同时设置默认tag\r\n    setIconSelect(0)\r\n  },[props.tagList])\r\n\r\n  iconChoosed.map((item, index) => {\r\n    let li =<li key={index} onClick={() => chooseTag(item)}>\r\n        <div className={`iconWrapper ${iconSelect===index?\"selected\":\"\"}`}  >\r\n          <Icon name={item.name} />\r\n        </div>\r\n        <span>{item.value}</span>\r\n      </li>\r\n    \r\n    return labelUsed.push(li)\r\n  })\r\n\r\n  return (\r\n    <ul className=\"tagList\">\r\n      {labelUsed}\r\n      {/* 这是为支出列表添加标签的 */}\r\n      {props.ifPushAddTag ? (\r\n        <li onClick={() => history.push('/totalLabel')}>\r\n          <div className=\"iconWrapper\" >\r\n            <Icon name=\"addTag\" />\r\n          </div>\r\n          <span>添加</span>\r\n        </li>\r\n      ) : null}\r\n    </ul>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport TagList from './tagList'\r\nimport {defaultIncomeTags} from '../store/iconList'\r\nimport styled from 'styled-components'\r\nimport LabelDatahelper from '../store/labelDatahelper'\r\n\r\nconst TabsWrap =styled.div`\r\n  height:100%;\r\n  // display:flex;\r\n  // flex-direction:column;\r\n  .tabBar{\r\n    display:flex;\r\n    justify-content:center;\r\n    align-items:center;\r\n    font-size:20px;\r\n    padding:4px 4px 0 4px;\r\n    background:#ffda47;\r\n    >span{\r\n      display:flex;\r\n      justify-content:center;\r\n      align-items:center;\r\n      position: relative;\r\n      margin: 0 15px;\r\n      padding:24px 0 8px;\r\n      &.selected::after{\r\n        content:'';\r\n        position:absolute;\r\n        height:1px;\r\n        background:black;\r\n        left:-40%;\r\n        bottom:0;\r\n        width:180%\r\n      }\r\n    }\r\n  }\r\n  .tabBar-taglist{\r\n    height:82%;\r\n    overflow:auto;\r\n  }\r\n`\r\nexport default function Tabs(props) {\r\n  const ldb=new LabelDatahelper('labelRecord')\r\n  const expenseTagList=ldb.readData().flat().filter((item)=>item.choose===true)\r\n  const [navBarType,setNavBarType]=useState(true)\r\n  //如果在这获取支出图标列表，会导致useEffect触发两次事件，暂时先在子组件获取吧\r\n  const incomeTagList=defaultIncomeTags//获取收入图标列表\r\n  function navbarHandle(e) {//获取moneyType\r\n    let value = e===\"-\"?true:false\r\n    setNavBarType(value)//选择tag列表\r\n    const defaultTag=value===true?expenseTagList[0]:incomeTagList[0] //切换tag列表时设置默认tag\r\n    props.moneyType(e,defaultTag)\r\n  }\r\n  function handleTag(tag){//获取tag\r\n    props.tagName(tag)\r\n  }\r\n  \r\n  return (\r\n    <TabsWrap>\r\n      <div className=\"tabBar\">\r\n        <span onClick={()=>navbarHandle(\"-\")} className={navBarType?\"selected\":\"\"}>支出</span>\r\n        <span onClick={()=>navbarHandle(\"+\")} className={!navBarType?\"selected\":\"\"}>收入</span>\r\n      </div>\r\n      <div className=\"tabBar-taglist\">\r\n        {navBarType? (\r\n          <TagList handleTag={handleTag} ifPushAddTag/>\r\n        ) : (\r\n          <TagList tagList={incomeTagList} handleTag={handleTag}/>\r\n        )}\r\n      </div>\r\n    </TabsWrap>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\nimport Icon from './icon'\r\nconst Inputwrap =styled.div`\r\n  label{\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 4px 8px;\r\n    font-size: 14px;\r\n    border-top: 1px solid #f5f5f5;\r\n    background: lighten(#f5f5f5, 4%);\r\n    .icon {\r\n      margin-right: 2px;\r\n    }\r\n    span {\r\n      white-space: nowrap;\r\n    }\r\n    input {\r\n      flex-grow: 1;\r\n      margin-left: 8px;\r\n      height: 32px;\r\n      border: none;\r\n      background: inherit;\r\n    }\r\n  }\r\n`\r\nexport default function Input(props){\r\n\r\n  return <Inputwrap>\r\n    <label>\r\n      <div className=\"icon\">\r\n        <Icon name=\"note\"/>\r\n      </div>\r\n      <span>备注:</span>\r\n      <input \r\n      placeholder=\"写点备注吧\"\r\n      type=\"text\"\r\n      value={props.value}\r\n      onChange={props.handleInput}\r\n      />\r\n    </label>\r\n  </Inputwrap>\r\n}","import {Link,useLocation} from 'react-router-dom'\r\nimport Icon from './icon'\r\nimport './nav.scss'\r\n\r\n export default function Nav(){\r\n  const addressList=[\"/countMoney\",\"/general\",\"/charts\"]\r\n  const navIcons=[{name:'money',value:'记账'},{name:'bookkeeping',value:'本月概况'},{name:'charts',value:'图表'}]\r\n  const navList=[]\r\n  const locationName=useLocation().pathname\r\n  addressList.map((item,index)=>{\r\n    let li = <li key={index} >\r\n      <Link to={item}\r\n      className={locationName===item?\"active\":''}\r\n      >\r\n      <Icon name={navIcons[index].name} />\r\n      {locationName===item?<span className={'showWord'}>\r\n        {navIcons[index].value}\r\n      </span>:null}\r\n      </Link>\r\n    </li>\r\n    return navList.push(li)\r\n  })\r\n \r\n  return <div className=\"navWrapper\">\r\n    <ul>\r\n      {navList}\r\n    </ul>\r\n  </div>\r\n}","import React,{ useState} from 'react'\r\nimport NumberPad from '../components/numberPad'\r\nimport Tabs from '../components/tabs'\r\nimport Input from '../components/note'\r\nimport 'antd/dist/antd.css'\r\nimport styled from 'styled-components'\r\nimport Nav from '../components/nav'\r\n// import Icon from '../components/icon'\r\n\r\nconst CountMoneyWrap=styled.div`\r\n  height:100%;\r\n  display:flex;\r\n  justify-content: flex-start;\r\n  flex-direction:column;\r\n  .switchAddOrMinus{\r\n    height:51%;\r\n    // flex:1;\r\n  }\r\n  .note{\r\n    height:6%;\r\n  }\r\n  .numberPadWrap{\r\n    height:35%\r\n  }\r\n  .navWrap{\r\n    height:8%\r\n  }\r\n`\r\nexport default function CountMoney(){//初始数据结构\r\n  let [bookList,setBookList]=useState({\r\n    id:\"\",\r\n    moneyType: \"-\",\r\n    amount:\"\",\r\n    note:\"\",\r\n    tag:{name:\"food\",value:\"餐饮\"},\r\n    createAt:\"\",\r\n  })\r\n\r\n  function handleTabs(type,defaultTag){//保存moneyType\r\n    setBookList(\r\n      Object.assign(bookList,{moneyType:type,tag:defaultTag})//解决useState不会自动合并更新对象的问题！！！！！\r\n    )\r\n  }\r\n  function handleTag(tag){//保存tag\r\n    setBookList({...bookList,tag:tag})\r\n  }\r\n  function handleInput(e){//处理note\r\n    //此处可能需要函数节流\r\n    let inputMsg=e.target.value\r\n    setBookList({...bookList,note:inputMsg})\r\n  }\r\n  function handleDefault(){//初始化数据\r\n    setBookList({...bookList,note:\"\"})\r\n    console.log('...countmoney49',bookList);\r\n    // setBookList(bookList={\r\n    //   id:\"\",\r\n    //   moneyType: \"-\",\r\n    //   amount:\"\",\r\n    //   note:\"\",\r\n    //   tag:{name:\"others\",value:\"其他\"},\r\n    //   createAt:\"\",\r\n    // })\r\n  }\r\n  return <CountMoneyWrap>\r\n    <div className=\"switchAddOrMinus\">\r\n      <Tabs tagName={handleTag} moneyType={handleTabs}/>\r\n    </div>\r\n    <div className=\"note\">\r\n      <Input  handleInput={handleInput} value={bookList.note}/>\r\n    </div>\r\n    <div className=\"numberPadWrap\">\r\n      <NumberPad  value={bookList} handleDefault={handleDefault}/>\r\n    </div>\r\n    <div className=\"navWrap\">\r\n      <Nav/>\r\n    </div>\r\n  </CountMoneyWrap>\r\n}","import React from 'react'\r\nimport Datahelper from '../store/datahelper' \r\nimport Icon from '../components/icon'\r\nimport './general.scss'\r\nimport Nav from '../components/nav'\r\n\r\nexport default function General(){\r\n  let db =new Datahelper('accountBook')\r\n  const localList=db.readData().reverse()\r\n  const myAccountList=[]\r\n  const totalMoneyOfTag=(type)=>{//按照moneyType计算支出和收入\r\n    let value=localList.filter(item=>{\r\n      return item.moneyType===type\r\n    }).reduce((sum,i)=>{return sum+parseInt(i.amount)},0)\r\n    return value\r\n  }\r\n  localList.map((item,index)=>{\r\n    let date=new Date(item.createAt).toLocaleDateString()\r\n    let amount=item.moneyType===\"-\"? -item.amount:item.amount\r\n    let li =<li key={index}>\r\n      <div className=\"iconWrapper\">\r\n        <Icon name={item.tag.name}></Icon>\r\n        <span>{item.tag.value}</span>\r\n      </div>\r\n      <div className=\"moneyAndDate\">\r\n        <span className=\"moneyAndDate-money\">￥{amount}</span>\r\n        <span className=\"moneyAndDate-date\">{date}</span>\r\n      </div>\r\n    </li>\r\n    return myAccountList.push(li)\r\n  })\r\n  return <div className=\"general\">\r\n    <div className=\"general-head\">\r\n      <span>全部收支 |</span>\r\n      <div className=\"general-head-block\">\r\n        <span className=\"general-head-block-word\">收入</span>\r\n        <span className=\"general-head-block-number\">￥{totalMoneyOfTag(\"+\")}</span>\r\n      </div>\r\n      <div className=\"general-head-block\">\r\n        <span className=\"general-head-block-word\">支出</span>\r\n        <span className=\"general-head-block-number\">￥{totalMoneyOfTag(\"-\")}</span>\r\n      </div>\r\n    </div>\r\n    <div className=\"general-body\">\r\n      <ul className=\"general-body-list\">\r\n        {myAccountList}\r\n      </ul>\r\n    </div>\r\n    <div className=\"general-nav\">\r\n      <Nav/>\r\n    </div>\r\n  </div>\r\n}","import dayjs from 'dayjs'\r\nconst dateFormatter =()=>{\r\n  const time= new Date().toISOString()\r\n  const year =dayjs(time).format('YYYY')\r\n  const month =dayjs(time).format('MM')\r\n  const day =dayjs(time).format('DD')\r\n  return {year,month,day}\r\n}\r\nexport {dateFormatter}","import echarts from 'echarts'\r\nimport React, { useEffect } from 'react'\r\n\r\nconst width = document.documentElement.clientWidth\r\nconst height = document.documentElement.clientWidth * 0.7\r\n\r\nexport default function BarChart(props) {\r\n  // const { expenseArr, incomeArr, dayOfMonthX } = props.value\r\n  useEffect(() => {\r\n    let container = document.getElementById('barChart')\r\n    container.style = `width: ${width}px;height:${height}px`\r\n    var myChart = echarts.init(container)\r\n    // 指定图表的配置项和数据\r\n    var option = {\r\n      // title: {\r\n      //     text: 'ECharts 入门示例',\r\n      //     top:20\r\n      // },\r\n      tooltip: {},\r\n      legend: {\r\n        data: ['支出', '收入'],\r\n        selected: {\r\n          支出: true,\r\n          收入: false,\r\n        },\r\n        itemWidth:40,\r\n        itemHeight:25\r\n      },\r\n      grid: {\r\n        x: 15,\r\n        y: 40,\r\n        x2: 20,\r\n        y2: 30,\r\n        borderWidth: 1,\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        // data: dayOfMonthX,\r\n        data: props.value.dayOfMonthX,\r\n        splitLine: {\r\n          show: true,\r\n          lineStyle: {\r\n            color: ['#F5F4F9'],\r\n          },\r\n        },\r\n        axisLine: {\r\n          //坐标线\r\n          lineStyle: {\r\n            type: 'solid',\r\n            color: '#F5F4F9', //轴线的颜色\r\n            width: '1', //坐标线的宽度\r\n          },\r\n        },\r\n        // axisTick: {//刻度\r\n        //   show: false//不显示刻度线\r\n        // },\r\n        axisLabel: {\r\n          interval: 1,\r\n          textStyle: {\r\n            color: '#000', //坐标值的具体的颜色\r\n            fontSize: 12,\r\n          },\r\n        },\r\n      },\r\n      yAxis: {\r\n        splitLine: { show: false },\r\n        axisLine: {\r\n          //线\r\n          show: false,\r\n        },\r\n        axisTick: {\r\n          //刻度\r\n          show: false,\r\n        },\r\n        axisLabel: {\r\n          show: false,\r\n        },\r\n      },\r\n      series: [\r\n        {\r\n          name: '支出',\r\n          type: 'bar',\r\n          // data: expenseArr,\r\n          data: props.value.expenseArr,\r\n          itemStyle: {\r\n            normal: {\r\n              barBorderRadius: [20, 10, 0, 0],\r\n              color: '#FD6B71', //设置柱子颜色\r\n              label: {\r\n                show: true, //柱子上显示值\r\n                position: 'top', //值在柱子上方显示\r\n                textStyle: {\r\n                  color: '#FD6B71', //值得颜色\r\n                },\r\n              },\r\n            },\r\n          },\r\n          barWidth: 5, //设置柱子宽度，单位为px\r\n        },\r\n        {\r\n          name: '收入',\r\n          type: 'bar',\r\n          // data: incomeArr,\r\n          data: props.value.incomeArr,\r\n          itemStyle: {\r\n            normal: {\r\n              barBorderRadius: [20, 10, 0, 0],\r\n              color: '#5aa469', //设置柱子颜色\r\n              label: {\r\n                show: true, //柱子上显示值\r\n                position: 'top', //值在柱子上方显示\r\n                textStyle: {\r\n                  color: '#5aa469', //值得颜色\r\n                },\r\n              },\r\n            },\r\n          },\r\n          barWidth: 5, //设置柱子宽度，单位为px\r\n        },\r\n      ],\r\n    }\r\n    myChart.setOption(option)\r\n    \r\n    myChart.on('legendselectchanged', function (e) {\r\n      for (let i = 0; i < option.legend.data.length; i++) {\r\n        if (e.name === option.legend.data[i]) {\r\n          option.legend.selected[e.name] = true //如果选中，则显示折线\r\n        } else {\r\n          option.legend.selected[option.legend.data[i]] = false // 将状态设置为未选中\r\n        }\r\n      }\r\n      e.name === '收入' ? props.controller('+') : props.controller('-') // 帮助饼图数据联动\r\n      myChart.setOption(option)\r\n    })\r\n    // 使用刚指定的配置项和数据显示图表。\r\n  }, [])\r\n\r\n  return <div id=\"barChart\" />\r\n}\r\n","import echarts from 'echarts'\r\nimport React,{useEffect} from 'react'\r\n\r\nconst width= document.documentElement.clientWidth\r\nconst height= document.documentElement.clientWidth*0.7\r\nexport default function Doughnut(props){\r\n  useEffect(()=>{\r\n    let container=document.getElementById('doughnut')\r\n    container.style = `width: ${width}px;height:${height}px`;\r\n    var myChart = echarts.init(container);\r\n    // 指定图表的配置项和数据\r\n    const option = {\r\n      tooltip: {\r\n        trigger: 'item',\r\n        formatter: '{a} <br/>{b}: {c} ({d}%)'\r\n      },\r\n      series: [\r\n        {\r\n          name: '访问来源',\r\n          type: 'pie',\r\n          radius: ['45%', '75%'],\r\n          label: {\r\n            show: true,\r\n            position: 'center',\r\n          },\r\n          itemStyle: {\r\n              normal:{\r\n                  label:{\r\n                      show:true,\r\n                      textStyle:{color:'#3c4858',fontSize:\"14\"},\r\n                      formatter:function(val){   \r\n                          return val.name.split(\"-\").join(\"\\n\");}\r\n                  },//饼图图形上的文本标签，可用于说明图形的一些数据信息，比如值，名称等。可以与itemStyle属性同级，具体看文档\r\n                  //线条颜色\r\n              },//基本样式\r\n              emphasis: {\r\n                  shadowBlur: 10,\r\n                  shadowOffsetX: 0,\r\n                  shadowColor: 'rgba(0, 0, 0, 0.5)',//鼠标放在区域边框颜色\r\n                  textColor:'#000'\r\n              }//鼠标放在各个区域的样式\r\n          },\r\n          data: props.pureTagList.tagCost,\r\n          color:['#0E7CE2', '#FF8352', '#E271DE', '#F8456B', '#00FFFF', '#4AEAB0',\"#503EFF\",\"#733DFF\",\"#966EFF\"],\r\n        }\r\n      ]\r\n    };\r\n  \r\n    // 使用刚指定的配置项和数据显示图表。\r\n    myChart.setOption(option);\r\n  })\r\n  \r\n  return <div id=\"doughnut\"/>\r\n\r\n}","import React,{ useState } from 'react'\r\nimport dayjs from 'dayjs'\r\nimport Datahelper from '../store/datahelper'\r\nimport { dateFormatter } from '../store/dateFormatter'\r\nimport BarChart from '../components/charts/barChart'\r\nimport Doughnut from '../components/charts/doughnut'\r\nimport Nav from '../components/nav'\r\nimport './charts.scss'\r\n\r\nexport default function Charts() {\r\n  let db = new Datahelper('accountBook')\r\n  const localList = db.readData()\r\n  const monthLastDay = dayjs().daysInMonth()\r\n  const { year } = dateFormatter()\r\n  const { month } = dateFormatter()\r\n  // 接下来要获取每日花费\r\n  const filterLocalList = localList.filter((item) => {\r\n    let createYear = dayjs(item.createAt).format('YYYY')\r\n    let createMonth = dayjs(item.createAt).format('MM')\r\n    return createYear === year && createMonth === month\r\n  })\r\n  const expenseList = filterLocalList.filter((item) => {\r\n    //月度支出\r\n    return item.moneyType === '-'\r\n  })\r\n  const incomeList = filterLocalList.filter((item) => {\r\n    //月收入\r\n    return item.moneyType === '+'\r\n  })\r\n  const totalAccountByType = (e) => {\r\n    //支出和花费的月度总额\r\n    let accountList = e === '-' ? expenseList : incomeList\r\n    let totalAccountByType=0\r\n    for (let i = 0; i < accountList.length; i++) {\r\n      totalAccountByType += parseFloat(accountList[i].amount)\r\n    }\r\n    return totalAccountByType\r\n  }\r\n  const arrAccount = () => {\r\n    //这块数据是用于柱状图的\r\n    const expenseArr = []\r\n    const incomeArr = []\r\n    const dayOfMonthX = []\r\n\r\n    for (let i = 0; i < monthLastDay; i++) {\r\n      //遍历每天的总支出\r\n      dayOfMonthX[i] = i + 1\r\n\r\n      let eachDayCost = expenseList\r\n        .filter((item) => {\r\n          return parseInt(dayjs(item.createAt).format('DD')) === i+1\r\n        })\r\n        .map((item) => parseInt(item.amount))\r\n        .reduce((i, j) => {\r\n          return i + j\r\n        }, 0)\r\n      expenseArr[i] = eachDayCost === 0 ? '' : eachDayCost\r\n\r\n      let eachDayIncome = incomeList\r\n        .filter((item) => {\r\n          return parseInt(dayjs(item.createAt).format('DD')) === i+1\r\n        })\r\n        .map((item) => parseInt(item.amount))\r\n        .reduce((i, j) => {\r\n          return i + j\r\n        }, 0)\r\n      incomeArr[i] = eachDayIncome === 0 ? '' : eachDayIncome\r\n    }\r\n    return { expenseArr, incomeArr, dayOfMonthX }\r\n  }\r\n\r\n  const eachTagCost = (e) => {\r\n    //这块数据是用于甜甜圈图表的\r\n    //获取所有的tag\r\n    let accountList = e === '-' ? expenseList : incomeList\r\n    const tagCost = []\r\n    let value = 0\r\n    let name = ''\r\n    let totalValueByType=totalAccountByType(e)//拿到收入或者支出的总值\r\n    let allSameTypeTags = accountList.map((item) => {\r\n      return item.tag.value\r\n    })\r\n    const pureTagList = [...new Set(allSameTypeTags)] //allSameTypeTags就是我们获取的tag集合并且已经去重\r\n    for (let i = 0; i < pureTagList.length; i++) {\r\n      let arr = accountList.filter((item) => {\r\n        return item.tag.value === pureTagList[i]\r\n      })\r\n      value=arr.reduce((x, y) => x + parseInt(y.amount), 0)//拿到每项的总值\r\n      let percentValue=(value/totalValueByType*100).toFixed(2)\r\n\r\n      name = percentValue.toString()+'%-'+pureTagList[i]\r\n      tagCost.push({ value, name })\r\n    }\r\n\r\n    return { tagCost, pureTagList }\r\n  }\r\n\r\n  const [controller, setController] = useState(false)\r\n  function controllerHandle(moneyType) {\r\n    //用于bar和pie图表支出和收入的数据联动\r\n    moneyType === '+' ? setController(true) : setController(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      <span>{dayjs().month()+1}月总支出</span>\r\n      <div className=\"chart-bar\">\r\n        <BarChart value={arrAccount()} controller={controllerHandle} />\r\n      </div>\r\n      <div className=\"chart-doughnut\">\r\n        {controller === false ? (\r\n          <Doughnut pureTagList={eachTagCost('-')}/>\r\n        ) : (\r\n          <Doughnut pureTagList={eachTagCost('+')}/>\r\n        )}\r\n      </div>\r\n      <div className=\"navWrap\">\r\n        <Nav/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React,{ useState} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport Icon from '../components/icon'\r\nimport './totalLabel.scss'\r\nimport LabelDatahelper from '../store/labelDatahelper'\r\n\r\nexport default function TotalLabel(){\r\n  const history=useHistory()\r\n  let ldb =new LabelDatahelper('labelRecord')\r\n  // const category =['餐饮','购物','交通','居住','娱乐','医疗']\r\n  const [category]=useState(ldb.readData())\r\n  // const category =[foodTags,shoppingTags,transportTags,houseTags,entertainmentTags,medicalTags]\r\n  // const category =ldb.readData()\r\n  const filterChoosed=category.flat().filter((item)=> item.choose===true)\r\n  const [tagAllChoose,setTagAllChoose]=useState(filterChoosed)\r\n  const categoryList=[]\r\n  category.map((item,index)=>{\r\n    let list=<div className=\"sort\" key={index}>\r\n      <div className=\"sort-name\">\r\n        {item[0].value}\r\n      </div>\r\n      <ul className=\"sort-lists\">\r\n        {categoryItem(item)}\r\n      </ul>\r\n    </div> \r\n    return categoryList.push(list)\r\n  })\r\n  function categoryItem(list){//子组件，渲染分类标签列表\r\n    const categoryUl=[]\r\n    list.map((item,index)=>{\r\n      let li =<li key={index}\r\n      className={parseInt(tagAllChoose.indexOf(item))>=0?\"active\":\"\"}\r\n      onClick={()=>handleClick(item)}\r\n      >\r\n        <Icon name={item.name} />\r\n        <span className=\"iconValue\">{item.value}</span>\r\n      </li>\r\n      return categoryUl.push(li)\r\n    })\r\n    return categoryUl\r\n  }\r\n\r\n  function handleClick(item){//处理图标选择与保存\r\n    item.choose=!item.choose\r\n    const newFilterChoosed=category.flat().filter((item)=> item.choose===true)\r\n    setTagAllChoose(newFilterChoosed)\r\n    ldb.saveData(category)\r\n  }\r\n\r\n  function handleLeftIcon(){//处理路由\r\n    history.go(-1)\r\n  }\r\n  return <div className=\"totalLabel\">\r\n    <div className=\"totalLabel-header\">\r\n      <div onClick={handleLeftIcon}>\r\n        <Icon name=\"left\" /> {/* 无法直接给icon添加点击事件 */}\r\n      </div>\r\n      <span>添加支出类别</span>\r\n      {/* <span className=\"confirm\">完成</span> */}\r\n    </div>\r\n    <div className=\"totalLabel-body\">\r\n      {categoryList}\r\n    </div>\r\n  </div>\r\n}","import React from 'react'\r\n\r\nexport default function noMatch(){\r\n  return <div>\r\n    <h1>\r\n      404!!!\r\n    </h1>\r\n  </div>\r\n}\r\n","export default function Edit(){\r\n  return <div>\r\n    <h1>zheshi edit</h1>\r\n  </div>\r\n}","import React from \"react\";\nimport CountMoney from './pages/countMoney'\nimport General from './pages/general'\nimport Charts from './pages/charts'\nimport TotalLabel from './pages/totalLabel'\nimport NoMatch from './pages/404'\nimport Edit from './pages/edit'\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport styled from 'styled-components'\nimport './App.scss'\n\nconst Wrapper =styled.div`\n  height:100vh;\n  display:flex;\n  flex-direction:column\n`\nconst Main=styled.div`\n  overflow:auto;\n  flex:1\n`\n\nexport default function App() {\n  return (\n    <Router>\n      <Wrapper>\n        <Main>\n          <Switch>\n            <Route path=\"/countMoney\">\n              <CountMoney />\n            </Route>\n            <Route exact path=\"/general\" component={General}>\n            </Route>\n            <Route path=\"/charts\">\n              <Charts />\n            </Route>\n            <Route path=\"/totalLabel\">\n              <TotalLabel />\n            </Route>\n            <Route path=\"/edit/:id\" component={Edit}/>\n            <Route path=\"/\">\n              <Redirect to=\"/countMoney\"/>\n            </Route>\n            <Route path=\"*\">\n              <NoMatch/>\n            </Route>\n          </Switch>\n        </Main>\n        {/* <Nav /> */}\n      </Wrapper>\n    </Router>\n  );\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import CountMoney from './pages/countMoney';\nimport App from './App'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}